name: Deploy React App to Kubernetes with ArgoCD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install --legacy-peer-deps

      - name: Build React App
        run: npm run build

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push React App Docker Image
        run: |
          REACT_APP_IMAGE_TAG=yaswanthkumar12/react-app:${{ github.sha }}
          docker build -t $REACT_APP_IMAGE_TAG .
          docker push $REACT_APP_IMAGE_TAG
          echo "REACT_APP_IMAGE_TAG=$REACT_APP_IMAGE_TAG" >> $GITHUB_ENV



  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Setup Kubeconfig
  #       run: |
  #         echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/kubeconfig.yaml
  #       env:
  #         KUBECONFIG: $HOME/kubeconfig.yaml

  #     - name: Update Kubernetes Manifests with New Image
  #       run: |
  #         sed -i "s|image: .*|image: ${{ env.IMAGE_TAG }}|" k8s/deployment.yaml

  #     - name: Apply Kubernetes Manifests
  #       run: |
  #         kubectl --kubeconfig=$HOME/kubeconfig.yaml apply -f k8s/deployment.yaml
  #         kubectl --kubeconfig=$HOME/kubeconfig.yaml apply -f k8s/service.yaml

  #     - name: Install ArgoCD CLI
  #       run: |
  #         curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
  #         chmod +x argocd
  #         sudo mv argocd /usr/local/bin/

  #     - name: Login to ArgoCD
  #       run: |
  #         argocd login ${{ secrets.ARGOCD_SERVER }} \
  #           --username ${{ secrets.ARGOCD_USERNAME }} \
  #           --password ${{ secrets.ARGOCD_PASSWORD }} --insecure

  #     - name: Sync ArgoCD Application
  #       run: |
  #         argocd app sync react-app
  #         argocd app wait react-app --health --timeout 300

  #     - name: Clean up Kubeconfig
  #       run: rm -f $HOME/kubeconfig.yaml

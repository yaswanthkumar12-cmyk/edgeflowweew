# name: Deploy Spring Boot Application to Azure App Services
 
# on:
#   push:
#     branches:
#       - main  # Change this to the branch you want to trigger the workflow
 
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
 
#     steps:
#     # Step 1: Checkout the code
#     - name: Checkout Code
#       uses: actions/checkout@v3
 
#     # Step 2: Set up Java JDK
#     - name: Set up Java JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'  # Use Java 17 (update if needed)
#         distribution: 'temurin'  # Use 'temurin' (formerly AdoptOpenJDK)
 
#     # Step 3: Cache Maven dependencies for faster builds
#     - name: Cache Maven dependencies
#       uses: actions/cache@v3
#       with:
#         path: ~/.m2/repository
#         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#         restore-keys: |
#           ${{ runner.os }}-maven-
 
#     # Step 4: Build the Spring Boot application
#     - name: Build with Maven
#       run: mvn clean package -DskipTests  # Use Gradle if you're not using Maven
 
#     # Step 5: Deploy to Azure Web App using the publish profile
#     - name: Deploy to Azure Web App
#       uses: azure/webapps-deploy@v2
#       with:
#         app-name: 'ssitcloudBackend'  # Replace with your Azure Web App name
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # Store your Azure publish profile as a secret
#         package: target/*.jar  # Path to the built JAR file (or WAR file if applicable)
